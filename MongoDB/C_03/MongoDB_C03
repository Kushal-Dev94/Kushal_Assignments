it@IT-LL-14:~$ sudo service mongod start
[sudo] password for it: 
it@IT-LL-14:~$ mongosh
Current Mongosh Log ID:	66b0a2f5c061469d42149f47
Connecting to:		mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.10
Using MongoDB:		7.0.12
Using Mongosh:		2.2.10
mongosh 2.2.15 is available for download: https://www.mongodb.com/try/download/shell

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2024-08-05T15:13:26.964+05:30: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2024-08-05T15:13:31.150+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
   2024-08-05T15:13:31.150+05:30: vm.max_map_count is too low
------

test> // Use or create a new database

test> use collegeDB
switched to db collegeDB
collegeDB> // Create a collection named 'students' and insert sample documents

collegeDB> db.students.insertMany([
...     { name: "Alice", age: 22, major: "Computer Science", credits: 30, debits: 30 },
...     { name: "Bob", age: 23, major: "Mathematics", credits: 25, debdebits: 20 },
...     { name: "Charlie", age: 24, major: "Physics", credits: 35, debdebits: 35 },
...     { name: "David", age: 22, major: "Computer Science", credits: 40, debits: 20 },
...     { name: "Eve", age: 21, major: "Biology", credits: 45, debits: 45 }
... ])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('66b0a305c061469d42149f48'),
    '1': ObjectId('66b0a305c061469d42149f49'),
    '2': ObjectId('66b0a305c061469d42149f4a'),
    '3': ObjectId('66b0a305c061469d42149f4b'),
    '4': ObjectId('66b0a305c061469d42149f4c')
  }
}
collegeDB> // Find students where credits equal debits using $where

collegeDB> db.students.find({ $where: "this.credits == this.debits" }) 
[
  {
    _id: ObjectId('66b0a305c061469d42149f48'),
    name: 'Alice',
    age: 22,
    major: 'Computer Science',
    credits: 30,
    debits: 30
  },
  {
    _id: ObjectId('66b0a305c061469d42149f4a'),
    name: 'Charlie',
    age: 24,
    major: 'Physics',
    credits: 35,
    debits: 35
  },
  {
    _id: ObjectId('66b0a305c061469d42149f4c'),
    name: 'Eve',
    age: 21,
    major: 'Biology',
    credits: 45,
    debits: 45
  }
]
collegeDB> // Limit the number of results to 2

collegeDB> db.students.find().limit(2)
[
  {
    _id: ObjectId('66b0a305c061469d42149f48'),
    name: 'Alice',
    age: 22,
    major: 'Computer Science',
    credits: 30,
    debits: 30
  },
  {
    _id: ObjectId('66b0a305c061469d42149f49'),
    name: 'Bob',
    age: 23,
    major: 'Mathematics',
    credits: 25,
    debits: 20
  }
]
collegeDB> // Skip the first 2 documents and return the next set

collegeDB> db.students.find().skip(2)
[
  {
    _id: ObjectId('66b0a305c061469d42149f4a'),
    name: 'Charlie',
    age: 24,
    major: 'Physics',
    credits: 35,
    debits: 35
  },
  {
    _id: ObjectId('66b0a305c061469d42149f4b'),
    name: 'David',
    age: 22,
    major: 'Computer Science',
    credits: 40,
    debits: 20
  },
  {
    _id: ObjectId('66b0a305c061469d42149f4c'),
    name: 'Eve',
    age: 21,
    major: 'Biology',
    credits: 45,
    debits: 45
  }
]
collegeDB> // Sort students by age in descending order

collegeDB> db.students.find().sort({ age: -1 })
[
  {
    _id: ObjectId('66b0a305c061469d42149f4a'),
    name: 'Charlie',
    age: 24,
    major: 'Physics',
    credits: 35,
    debits: 35
  },
  {
    _id: ObjectId('66b0a305c061469d42149f49'),
    name: 'Bob',
    age: 23,
    major: 'Mathematics',
    credits: 25,
    debits: 20
  },
  {
    _id: ObjectId('66b0a305c061469d42149f48'),
    name: 'Alice',
    age: 22,
    major: 'Computer Science',
    credits: 30,
    debits: 30
  },
  {
    _id: ObjectId('66b0a305c061469d42149f4b'),
    name: 'David',
    age: 22,
    major: 'Computer Science',
    credits: 40,
    debits: 20
  },
  {
    _id: ObjectId('66b0a305c061469d42149f4c'),
    name: 'Eve',
    age: 21,
    major: 'Biology',
    credits: 45,
    debits: 45
  }
]
collegeDB> // Find students older than 22, sort by age, and limit to 2 results

collegeDB> db.students.find({ age: { $gt: 22 } }).sort({ age: 1 }).limit(2)
[
  {
    _id: ObjectId('66b0a305c061469d42149f49'),
    name: 'Bob',
    age: 23,
    major: 'Mathematics',
    credits: 25,
    debits: 20
  },
  {
    _id: ObjectId('66b0a305c061469d42149f4a'),
    name: 'Charlie',
    age: 24,
    major: 'Physics',
    credits: 35,
    debits: 35
  }
]
collegeDB> // Count the number of students in the collection

collegeDB> db.students.countDocuments()
5
collegeDB> // Get distinct majors from the collection

collegeDB> db.students.distinct("major")
[ 'Biology', 'Computer Science', 'Mathematics', 'Physics' ]
collegeDB> // Group by major and get the count of students in each major

collegeDB> db.students.aggregate([
...     { $group: { _id: "$major", count: { $sum: 1 } } }
... ])
[
  { _id: 'Biology', count: 1 },
  { _id: 'Computer Science', count: 2 },
  { _id: 'Physics', count: 1 },
  { _id: 'Mathematics', count: 1 }
]
collegeDB> // Map-Reduce to calculate total credits for each major

collegeDB> db.students.mapReduce(
...     function() { emit(this.major, this.credits); },
...     function(key, values) { return Array.sum(values); },
...     { out: "total_credits_per_major" }
... )
DeprecationWarning: Collection.mapReduce() is deprecated. Use an aggregation instead.
See https://docs.mongodb.com/manual/core/map-reduce for details.
{ result: 'total_credits_per_major', ok: 1 }
collegeDB> // Run the 'collStats' command to get statistics about the 'students' collection

collegeDB> db.runCommand({ collStats: "students" })
{
  ns: 'collegeDB.students',
  size: 475,
  count: 5,
  avgObjSize: 95,
  numOrphanDocs: 0,
  storageSize: 4096,
  freeStorageSize: 0,
  capped: false,
  wiredTiger: {
    metadata: { formatVersion: 1 },
    creationString: 'access_pattern_hint=none,allocation_size=4KB,app_metadata=(formatVersion=1),assert=(commit_timestamp=none,durable_timestamp=none,read_timestamp=none,write_timestamp=on),block_allocation=best,block_compressor=snappy,cache_resident=false,checksum=on,colgroups=,collator=,columns=,dictionary=0,encryption=(keyid=,name=),exclusive=false,extractor=,format=btree,huffman_key=,huffman_value=,ignore_in_memory_cache_size=false,immutable=false,import=(compare_timestamp=oldest_timestamp,enabled=false,file_metadata=,metadata_file=,repair=false),internal_item_max=0,internal_key_max=0,internal_key_truncate=true,internal_page_max=4KB,key_format=q,key_gap=10,leaf_item_max=0,leaf_key_max=0,leaf_page_max=32KB,leaf_value_max=64MB,log=(enabled=true),lsm=(auto_throttle=true,bloom=true,bloom_bit_count=16,bloom_config=,bloom_hash_count=8,bloom_oldest=false,chunk_count_limit=0,chunk_max=5GB,chunk_size=10MB,merge_custom=(prefix=,start_generation=0,suffix=),merge_max=15,merge_min=0),memory_page_image_max=0,memory_page_max=10m,os_cache_dirty_max=0,os_cache_max=0,prefix_compression=false,prefix_compression_min=4,source=,split_deepen_min_child=0,split_deepen_per_child=0,split_pct=90,tiered_storage=(auth_token=,bucket=,bucket_prefix=,cache_directory=,local_retention=300,name=,object_target_size=0),type=file,value_format=u,verbose=[write_timestamp],write_timestamp_usage=none',
    type: 'file',
    uri: 'statistics:table:collection-0--7410169657078775461',
    LSM: {
      'bloom filter false positives': 0,
      'bloom filter hits': 0,
      'bloom filter misses': 0,
      'bloom filter pages evicted from cache': 0,
      'bloom filter pages read into cache': 0,
      'bloom filters in the LSM tree': 0,
      'chunks in the LSM tree': 0,
      'highest merge generation in the LSM tree': 0,
      'queries that could have benefited from a Bloom filter that did not exist': 0,
      'sleep for LSM checkpoint throttle': 0,
      'sleep for LSM merge throttle': 0,
      'total size of bloom filters': 0
    },
    autocommit: {
      'retries for readonly operations': 0,
      'retries for update operations': 0
    },
    'block-manager': {
      'allocations requiring file extension': 0,
      'blocks allocated': 0,
      'blocks freed': 0,
      'checkpoint size': 0,
      'file allocation unit size': 4096,
      'file bytes available for reuse': 0,
      'file magic number': 120897,
      'file major version number': 1,
      'file size in bytes': 4096,
      'minor version number': 0
    },
    btree: {
      'btree checkpoint generation': 0,
      'btree clean tree checkpoint expiration time': 0,
      'btree compact pages reviewed': 0,
      'btree compact pages rewritten': 0,
      'btree compact pages skipped': 0,
      'btree number of pages reconciled during checkpoint': 0,
      'btree skipped by compaction as process would not reduce size': 0,
      'column-store fixed-size leaf pages': 0,
      'column-store fixed-size time windows': 0,
      'column-store internal pages': 0,
      'column-store variable-size RLE encoded values': 0,
      'column-store variable-size deleted values': 0,
      'column-store variable-size leaf pages': 0,
      'fixed-record size': 0,
      'maximum internal page size': 4096,
      'maximum leaf page key size': 2867,
      'maximum leaf page size': 32768,
      'maximum leaf page value size': 67108864,
      'maximum tree depth': 3,
      'number of key/value pairs': 0,
      'overflow pages': 0,
      'row-store empty values': 0,
      'row-store internal pages': 0,
      'row-store leaf pages': 0
    },
    cache: {
      'bytes currently in the cache': 1794,
      'bytes dirty in the cache cumulative': 804,
      'bytes read into cache': 0,
      'bytes written from cache': 0,
      'checkpoint blocked page eviction': 0,
      'checkpoint of history store file blocked non-history store page eviction': 0,
      'data source pages selected for eviction unable to be evicted': 0,
      'eviction gave up due to detecting a disk value without a timestamp behind the last update on the chain': 0,
      'eviction gave up due to detecting a tombstone without a timestamp ahead of the selected on disk update': 0,
      'eviction gave up due to detecting a tombstone without a timestamp ahead of the selected on disk update after validating the update chain': 0,
      'eviction gave up due to detecting update chain entries without timestamps after the selected on disk update': 0,
      'eviction gave up due to needing to remove a record from the history store but checkpoint is running': 0,
      'eviction walk passes of a file': 0,
      'eviction walk target pages histogram - 0-9': 0,
      'eviction walk target pages histogram - 10-31': 0,
      'eviction walk target pages histogram - 128 and higher': 0,
      'eviction walk target pages histogram - 32-63': 0,
      'eviction walk target pages histogram - 64-128': 0,
      'eviction walk target pages reduced due to history store cache pressure': 0,
      'eviction walks abandoned': 0,
      'eviction walks gave up because they restarted their walk twice': 0,
      'eviction walks gave up because they saw too many pages and found no candidates': 0,
      'eviction walks gave up because they saw too many pages and found too few candidates': 0,
      'eviction walks random search fails to locate a page, results in a null position': 0,
      'eviction walks reached end of tree': 0,
      'eviction walks restarted': 0,
      'eviction walks started from root of tree': 0,
      'eviction walks started from saved location in tree': 0,
      'hazard pointer blocked page eviction': 0,
      'history store table insert calls': 0,
      'history store table insert calls that returned restart': 0,
      'history store table reads': 0,
      'history store table reads missed': 0,
      'history store table reads requiring squashed modifies': 0,
      'history store table resolved updates without timestamps that lose their durable timestamp': 0,
      'history store table truncation by rollback to stable to remove an unstable update': 0,
      'history store table truncation by rollback to stable to remove an update': 0,
      'history store table truncation to remove all the keys of a btree': 0,
      'history store table truncation to remove an update': 0,
      'history store table truncation to remove range of updates due to an update without a timestamp on data page': 0,
      'history store table truncation to remove range of updates due to key being removed from the data page during reconciliation': 0,
      'history store table truncations that would have happened in non-dryrun mode': 0,
      'history store table truncations to remove an unstable update that would have happened in non-dryrun mode': 0,
      'history store table truncations to remove an update that would have happened in non-dryrun mode': 0,
      'history store table updates without timestamps fixed up by reinserting with the fixed timestamp': 0,
      'history store table writes requiring squashed modifies': 0,
      'in-memory page passed criteria to be split': 0,
      'in-memory page splits': 0,
      'internal page split blocked its eviction': 0,
      'internal pages evicted': 0,
      'internal pages split during eviction': 0,
      'leaf pages split during eviction': 0,
      'locate a random in-mem ref by examining all entries on the root page': 0,
      'modified pages evicted': 0,
      'overflow keys on a multiblock row-store page blocked its eviction': 0,
      'overflow pages read into cache': 0,
      'page split during eviction deepened the tree': 0,
      'page written requiring history store records': 0,
      'pages read into cache': 0,
      'pages read into cache after truncate': 0,
      'pages read into cache after truncate in prepare state': 0,
      'pages requested from the cache': 16,
      'pages seen by eviction walk': 0,
      'pages written from cache': 0,
      'pages written requiring in-memory restoration': 0,
      'recent modification of a page blocked its eviction': 0,
      'reverse splits performed': 0,
      'reverse splits skipped because of VLCS namespace gap restrictions': 0,
      'the number of times full update inserted to history store': 0,
      'the number of times reverse modify inserted to history store': 0,
      'tracked dirty bytes in the cache': 1603,
      'uncommitted truncate blocked page eviction': 0,
      'unmodified pages evicted': 0
    },
    cache_walk: {
      'Average difference between current eviction generation when the page was last considered': 0,
      'Average on-disk page image size seen': 0,
      'Average time in cache for pages that have been visited by the eviction server': 0,
      'Average time in cache for pages that have not been visited by the eviction server': 0,
      'Clean pages currently in cache': 0,
      'Current eviction generation': 0,
      'Dirty pages currently in cache': 0,
      'Entries in the root page': 0,
      'Internal pages currently in cache': 0,
      'Leaf pages currently in cache': 0,
      'Maximum difference between current eviction generation when the page was last considered': 0,
      'Maximum page size seen': 0,
      'Minimum on-disk page image size seen': 0,
      'Number of pages never visited by eviction server': 0,
      'On-disk page image sizes smaller than a single allocation unit': 0,
      'Pages created in memory and never written': 0,
      'Pages currently queued for eviction': 0,
      'Pages that could not be queued for eviction': 0,
      'Refs skipped during cache traversal': 0,
      'Size of the root page': 0,
      'Total number of pages currently in cache': 0
    },
    'checkpoint-cleanup': {
      'pages added for eviction': 0,
      'pages removed': 0,
      'pages skipped during tree walk': 0,
      'pages visited': 0
    },
    compression: {
      'compressed page maximum internal page size prior to compression': 4096,
      'compressed page maximum leaf page size prior to compression ': 131072,
      'compressed pages read': 0,
      'compressed pages written': 0,
      'number of blocks with compress ratio greater than 64': 0,
      'number of blocks with compress ratio smaller than 16': 0,
      'number of blocks with compress ratio smaller than 2': 0,
      'number of blocks with compress ratio smaller than 32': 0,
      'number of blocks with compress ratio smaller than 4': 0,
      'number of blocks with compress ratio smaller than 64': 0,
      'number of blocks with compress ratio smaller than 8': 0,
      'page written failed to compress': 0,
      'page written was too small to compress': 0
    },
    cursor: {
      'Total number of deleted pages skipped during tree walk': 0,
      'Total number of entries skipped by cursor next calls': 0,
      'Total number of entries skipped by cursor prev calls': 0,
      'Total number of entries skipped to position the history store cursor': 0,
      'Total number of in-memory deleted pages skipped during tree walk': 0,
      'Total number of on-disk deleted pages skipped during tree walk': 0,
      'Total number of times a search near has exited due to prefix config': 0,
      'Total number of times cursor fails to temporarily release pinned page to encourage eviction of hot or large page': 0,
      'Total number of times cursor temporarily releases pinned page to encourage eviction of hot or large page': 0,
      'bulk loaded cursor insert calls': 0,
      'cache cursors reuse count': 9,
      'close calls that result in cache': 10,
      'create calls': 2,
      'cursor bound calls that return an error': 0,
      'cursor bounds cleared from reset': 0,
      'cursor bounds comparisons performed': 0,
      'cursor bounds next called on an unpositioned cursor': 0,
      'cursor bounds next early exit': 0,
      'cursor bounds prev called on an unpositioned cursor': 0,
      'cursor bounds prev early exit': 0,
      'cursor bounds search early exit': 0,
      'cursor bounds search near call repositioned cursor': 0,
      'cursor cache calls that return an error': 0,
      'cursor close calls that return an error': 0,
      'cursor compare calls that return an error': 0,
      'cursor equals calls that return an error': 0,
      'cursor get key calls that return an error': 0,
      'cursor get value calls that return an error': 0,
      'cursor insert calls that return an error': 0,
      'cursor insert check calls that return an error': 0,
      'cursor largest key calls that return an error': 0,
      'cursor modify calls that return an error': 0,
      'cursor next calls that return an error': 0,
      'cursor next calls that skip due to a globally visible history store tombstone': 0,
      'cursor next calls that skip greater than 1 and fewer than 100 entries': 0,
      'cursor next calls that skip greater than or equal to 100 entries': 0,
      'cursor next random calls that return an error': 0,
      'cursor prev calls that return an error': 0,
      'cursor prev calls that skip due to a globally visible history store tombstone': 0,
      'cursor prev calls that skip greater than or equal to 100 entries': 0,
      'cursor prev calls that skip less than 100 entries': 0,
      'cursor reconfigure calls that return an error': 0,
      'cursor remove calls that return an error': 0,
      'cursor reopen calls that return an error': 0,
      'cursor reserve calls that return an error': 0,
      'cursor reset calls that return an error': 0,
      'cursor search calls that return an error': 0,
      'cursor search near calls that return an error': 0,
      'cursor update calls that return an error': 0,
      'insert calls': 5,
      'insert key and value bytes': 480,
      modify: 0,
      'modify key and value bytes affected': 0,
      'modify value bytes modified': 0,
      'next calls': 51,
      'open cursor count': 0,
      'operation restarted': 0,
      'prev calls': 1,
      'remove calls': 0,
      'remove key bytes removed': 0,
      'reserve calls': 0,
      'reset calls': 26,
      'search calls': 0,
      'search history store calls': 0,
      'search near calls': 2,
      'truncate calls': 0,
      'update calls': 0,
      'update key and value bytes': 0,
      'update value size change': 0
    },
    reconciliation: {
      'VLCS pages explicitly reconciled as empty': 0,
      'approximate byte size of timestamps in pages written': 0,
      'approximate byte size of transaction IDs in pages written': 0,
      'dictionary matches': 0,
      'fast-path pages deleted': 0,
      'internal page key bytes discarded using suffix compression': 0,
      'internal page multi-block writes': 0,
      'leaf page key bytes discarded using prefix compression': 0,
      'leaf page multi-block writes': 0,
      'leaf-page overflow keys': 0,
      'maximum blocks required for a page': 0,
      'overflow values written': 0,
      'page reconciliation calls': 0,
      'page reconciliation calls for eviction': 0,
      'pages deleted': 0,
      'pages written including an aggregated newest start durable timestamp ': 0,
      'pages written including an aggregated newest stop durable timestamp ': 0,
      'pages written including an aggregated newest stop timestamp ': 0,
      'pages written including an aggregated newest stop transaction ID': 0,
      'pages written including an aggregated newest transaction ID ': 0,
      'pages written including an aggregated oldest start timestamp ': 0,
      'pages written including an aggregated prepare': 0,
      'pages written including at least one prepare': 0,
      'pages written including at least one start durable timestamp': 0,
      'pages written including at least one start timestamp': 0,
      'pages written including at least one start transaction ID': 0,
      'pages written including at least one stop durable timestamp': 0,
      'pages written including at least one stop timestamp': 0,
      'pages written including at least one stop transaction ID': 0,
      'records written including a prepare': 0,
      'records written including a start durable timestamp': 0,
      'records written including a start timestamp': 0,
      'records written including a start transaction ID': 0,
      'records written including a stop durable timestamp': 0,
      'records written including a stop timestamp': 0,
      'records written including a stop transaction ID': 0
    },
    session: { 'object compaction': 0 },
    transaction: {
      'a reader raced with a prepared transaction commit and skipped an update or updates': 0,
      'checkpoint has acquired a snapshot for its transaction': 0,
      'number of times overflow removed value is read': 0,
      'race to read prepared update retry': 0,
      'rollback to stable history store keys that would have been swept in non-dryrun mode': 0,
      'rollback to stable history store records with stop timestamps older than newer records': 0,
      'rollback to stable inconsistent checkpoint': 0,
      'rollback to stable keys removed': 0,
      'rollback to stable keys restored': 0,
      'rollback to stable keys that would have been removed in non-dryrun mode': 0,
      'rollback to stable keys that would have been restored in non-dryrun mode': 0,
      'rollback to stable restored tombstones from history store': 0,
      'rollback to stable restored updates from history store': 0,
      'rollback to stable skipping delete rle': 0,
      'rollback to stable skipping stable rle': 0,
      'rollback to stable sweeping history store keys': 0,
      'rollback to stable tombstones from history store that would have been restored in non-dryrun mode': 0,
      'rollback to stable updates from history store that would have been restored in non-dryrun mode': 0,
      'rollback to stable updates removed from history store': 0,
      'rollback to stable updates that would have been removed from history store in non-dryrun mode': 0,
      'transaction checkpoints due to obsolete pages': 0,
      'update conflicts': 0
    }
  },
  nindexes: 1,
  indexDetails: {
    _id_: {
      metadata: { formatVersion: 8 },
      creationString: 'access_pattern_hint=none,allocation_size=4KB,app_metadata=(formatVersion=8),assert=(commit_timestamp=none,durable_timestamp=none,read_timestamp=none,write_timestamp=on),block_allocation=best,block_compressor=,cache_resident=false,checksum=on,colgroups=,collator=,columns=,dictionary=0,encryption=(keyid=,name=),exclusive=false,extractor=,format=btree,huffman_key=,huffman_value=,ignore_in_memory_cache_size=false,immutable=false,import=(compare_timestamp=oldest_timestamp,enabled=false,file_metadata=,metadata_file=,repair=false),internal_item_max=0,internal_key_max=0,internal_key_truncate=true,internal_page_max=16k,key_format=u,key_gap=10,leaf_item_max=0,leaf_key_max=0,leaf_page_max=16k,leaf_value_max=0,log=(enabled=true),lsm=(auto_throttle=true,bloom=true,bloom_bit_count=16,bloom_config=,bloom_hash_count=8,bloom_oldest=false,chunk_count_limit=0,chunk_max=5GB,chunk_size=10MB,merge_custom=(prefix=,start_generation=0,suffix=),merge_max=15,merge_min=0),memory_page_image_max=0,memory_page_max=5MB,os_cache_dirty_max=0,os_cache_max=0,prefix_compression=true,prefix_compression_min=4,source=,split_deepen_min_child=0,split_deepen_per_child=0,split_pct=90,tiered_storage=(auth_token=,bucket=,bucket_prefix=,cache_directory=,local_retention=300,name=,object_target_size=0),type=file,value_format=u,verbose=[write_timestamp],write_timestamp_usage=none',
      type: 'file',
      uri: 'statistics:table:index-1--7410169657078775461',
      LSM: {
        'bloom filter false positives': 0,
        'bloom filter hits': 0,
        'bloom filter misses': 0,
        'bloom filter pages evicted from cache': 0,
        'bloom filter pages read into cache': 0,
        'bloom filters in the LSM tree': 0,
        'chunks in the LSM tree': 0,
        'highest merge generation in the LSM tree': 0,
        'queries that could have benefited from a Bloom filter that did not exist': 0,
        'sleep for LSM checkpoint throttle': 0,
        'sleep for LSM merge throttle': 0,
        'total size of bloom filters': 0
      },
      autocommit: {
        'retries for readonly operations': 0,
        'retries for update operations': 0
      },
      'block-manager': {
        'allocations requiring file extension': 0,
        'blocks allocated': 0,
        'blocks freed': 0,
        'checkpoint size': 0,
        'file allocation unit size': 4096,
        'file bytes available for reuse': 0,
        'file magic number': 120897,
        'file major version number': 1,
        'file size in bytes': 4096,
        'minor version number': 0
      },
      btree: {
        'btree checkpoint generation': 0,
        'btree clean tree checkpoint expiration time': 0,
        'btree compact pages reviewed': 0,
        'btree compact pages rewritten': 0,
        'btree compact pages skipped': 0,
        'btree number of pages reconciled during checkpoint': 0,
        'btree skipped by compaction as process would not reduce size': 0,
        'column-store fixed-size leaf pages': 0,
        'column-store fixed-size time windows': 0,
        'column-store internal pages': 0,
        'column-store variable-size RLE encoded values': 0,
        'column-store variable-size deleted values': 0,
        'column-store variable-size leaf pages': 0,
        'fixed-record size': 0,
        'maximum internal page size': 16384,
        'maximum leaf page key size': 1474,
        'maximum leaf page size': 16384,
        'maximum leaf page value size': 7372,
        'maximum tree depth': 3,
        'number of key/value pairs': 0,
        'overflow pages': 0,
        'row-store empty values': 0,
        'row-store internal pages': 0,
        'row-store leaf pages': 0
      },
      cache: {
        'bytes currently in the cache': 1364,
        'bytes dirty in the cache cumulative': 714,
        'bytes read into cache': 0,
        'bytes written from cache': 0,
        'checkpoint blocked page eviction': 0,
        'checkpoint of history store file blocked non-history store page eviction': 0,
        'data source pages selected for eviction unable to be evicted': 0,
        'eviction gave up due to detecting a disk value without a timestamp behind the last update on the chain': 0,
        'eviction gave up due to detecting a tombstone without a timestamp ahead of the selected on disk update': 0,
        'eviction gave up due to detecting a tombstone without a timestamp ahead of the selected on disk update after validating the update chain': 0,
        'eviction gave up due to detecting update chain entries without timestamps after the selected on disk update': 0,
        'eviction gave up due to needing to remove a record from the history store but checkpoint is running': 0,
        'eviction walk passes of a file': 0,
        'eviction walk target pages histogram - 0-9': 0,
        'eviction walk target pages histogram - 10-31': 0,
        'eviction walk target pages histogram - 128 and higher': 0,
        'eviction walk target pages histogram - 32-63': 0,
        'eviction walk target pages histogram - 64-128': 0,
        'eviction walk target pages reduced due to history store cache pressure': 0,
        'eviction walks abandoned': 0,
        'eviction walks gave up because they restarted their walk twice': 0,
        'eviction walks gave up because they saw too many pages and found no candidates': 0,
        'eviction walks gave up because they saw too many pages and found too few candidates': 0,
        'eviction walks random search fails to locate a page, results in a null position': 0,
        'eviction walks reached end of tree': 0,
        'eviction walks restarted': 0,
        'eviction walks started from root of tree': 0,
        'eviction walks started from saved location in tree': 0,
        'hazard pointer blocked page eviction': 0,
        'history store table insert calls': 0,
        'history store table insert calls that returned restart': 0,
        'history store table reads': 0,
        'history store table reads missed': 0,
        'history store table reads requiring squashed modifies': 0,
        'history store table resolved updates without timestamps that lose their durable timestamp': 0,
        'history store table truncation by rollback to stable to remove an unstable update': 0,
        'history store table truncation by rollback to stable to remove an update': 0,
        'history store table truncation to remove all the keys of a btree': 0,
        'history store table truncation to remove an update': 0,
        'history store table truncation to remove range of updates due to an update without a timestamp on data page': 0,
        'history store table truncation to remove range of updates due to key being removed from the data page during reconciliation': 0,
        'history store table truncations that would have happened in non-dryrun mode': 0,
        'history store table truncations to remove an unstable update that would have happened in non-dryrun mode': 0,
        'history store table truncations to remove an update that would have happened in non-dryrun mode': 0,
        'history store table updates without timestamps fixed up by reinserting with the fixed timestamp': 0,
        'history store table writes requiring squashed modifies': 0,
        'in-memory page passed criteria to be split': 0,
        'in-memory page splits': 0,
        'internal page split blocked its eviction': 0,
        'internal pages evicted': 0,
        'internal pages split during eviction': 0,
        'leaf pages split during eviction': 0,
        'locate a random in-mem ref by examining all entries on the root page': 0,
        'modified pages evicted': 0,
        'overflow keys on a multiblock row-store page blocked its eviction': 0,
        'overflow pages read into cache': 0,
        'page split during eviction deepened the tree': 0,
        'page written requiring history store records': 0,
        'pages read into cache': 0,
        'pages read into cache after truncate': 0,
        'pages read into cache after truncate in prepare state': 0,
        'pages requested from the cache': 5,
        'pages seen by eviction walk': 0,
        'pages written from cache': 0,
        'pages written requiring in-memory restoration': 0,
        'recent modification of a page blocked its eviction': 0,
        'reverse splits performed': 0,
        'reverse splits skipped because of VLCS namespace gap restrictions': 0,
        'the number of times full update inserted to history store': 0,
        'the number of times reverse modify inserted to history store': 0,
        'tracked dirty bytes in the cache': 1172,
        'uncommitted truncate blocked page eviction': 0,
        'unmodified pages evicted': 0
      },
      cache_walk: {
        'Average difference between current eviction generation when the page was last considered': 0,
        'Average on-disk page image size seen': 0,
        'Average time in cache for pages that have been visited by the eviction server': 0,
        'Average time in cache for pages that have not been visited by the eviction server': 0,
        'Clean pages currently in cache': 0,
        'Current eviction generation': 0,
        'Dirty pages currently in cache': 0,
        'Entries in the root page': 0,
        'Internal pages currently in cache': 0,
        'Leaf pages currently in cache': 0,
        'Maximum difference between current eviction generation when the page was last considered': 0,
        'Maximum page size seen': 0,
        'Minimum on-disk page image size seen': 0,
        'Number of pages never visited by eviction server': 0,
        'On-disk page image sizes smaller than a single allocation unit': 0,
        'Pages created in memory and never written': 0,
        'Pages currently queued for eviction': 0,
        'Pages that could not be queued for eviction': 0,
        'Refs skipped during cache traversal': 0,
        'Size of the root page': 0,
        'Total number of pages currently in cache': 0
      },
      'checkpoint-cleanup': {
        'pages added for eviction': 0,
        'pages removed': 0,
        'pages skipped during tree walk': 0,
        'pages visited': 0
      },
      compression: {
        'compressed page maximum internal page size prior to compression': 16384,
        'compressed page maximum leaf page size prior to compression ': 16384,
        'compressed pages read': 0,
        'compressed pages written': 0,
        'number of blocks with compress ratio greater than 64': 0,
        'number of blocks with compress ratio smaller than 16': 0,
        'number of blocks with compress ratio smaller than 2': 0,
        'number of blocks with compress ratio smaller than 32': 0,
        'number of blocks with compress ratio smaller than 4': 0,
        'number of blocks with compress ratio smaller than 64': 0,
        'number of blocks with compress ratio smaller than 8': 0,
        'page written failed to compress': 0,
        'page written was too small to compress': 0
      },
      cursor: {
        'Total number of deleted pages skipped during tree walk': 0,
        'Total number of entries skipped by cursor next calls': 0,
        'Total number of entries skipped by cursor prev calls': 0,
        'Total number of entries skipped to position the history store cursor': 0,
        'Total number of in-memory deleted pages skipped during tree walk': 0,
        'Total number of on-disk deleted pages skipped during tree walk': 0,
        'Total number of times a search near has exited due to prefix config': 0,
        'Total number of times cursor fails to temporarily release pinned page to encourage eviction of hot or large page': 0,
        'Total number of times cursor temporarily releases pinned page to encourage eviction of hot or large page': 0,
        'bulk loaded cursor insert calls': 0,
        'cache cursors reuse count': 0,
        'close calls that result in cache': 1,
        'create calls': 1,
        'cursor bound calls that return an error': 0,
        'cursor bounds cleared from reset': 0,
        'cursor bounds comparisons performed': 0,
        'cursor bounds next called on an unpositioned cursor': 0,
        'cursor bounds next early exit': 0,
        'cursor bounds prev called on an unpositioned cursor': 0,
        'cursor bounds prev early exit': 0,
        'cursor bounds search early exit': 0,
        'cursor bounds search near call repositioned cursor': 0,
        'cursor cache calls that return an error': 0,
        'cursor close calls that return an error': 0,
        'cursor compare calls that return an error': 0,
        'cursor equals calls that return an error': 0,
        'cursor get key calls that return an error': 0,
        'cursor get value calls that return an error': 0,
        'cursor insert calls that return an error': 0,
        'cursor insert check calls that return an error': 0,
        'cursor largest key calls that return an error': 0,
        'cursor modify calls that return an error': 0,
        'cursor next calls that return an error': 0,
        'cursor next calls that skip due to a globally visible history store tombstone': 0,
        'cursor next calls that skip greater than 1 and fewer than 100 entries': 0,
        'cursor next calls that skip greater than or equal to 100 entries': 0,
        'cursor next random calls that return an error': 0,
        'cursor prev calls that return an error': 0,
        'cursor prev calls that skip due to a globally visible history store tombstone': 0,
        'cursor prev calls that skip greater than or equal to 100 entries': 0,
        'cursor prev calls that skip less than 100 entries': 0,
        'cursor reconfigure calls that return an error': 0,
        'cursor remove calls that return an error': 0,
        'cursor reopen calls that return an error': 0,
        'cursor reserve calls that return an error': 0,
        'cursor reset calls that return an error': 0,
        'cursor search calls that return an error': 0,
        'cursor search near calls that return an error': 0,
        'cursor update calls that return an error': 0,
        'insert calls': 5,
        'insert key and value bytes': 80,
        modify: 0,
        'modify key and value bytes affected': 0,
        'modify value bytes modified': 0,
        'next calls': 0,
        'open cursor count': 0,
        'operation restarted': 0,
        'prev calls': 0,
        'remove calls': 0,
        'remove key bytes removed': 0,
        'reserve calls': 0,
        'reset calls': 6,
        'search calls': 0,
        'search history store calls': 0,
        'search near calls': 0,
        'truncate calls': 0,
        'update calls': 0,
        'update key and value bytes': 0,
        'update value size change': 0
      },
      reconciliation: {
        'VLCS pages explicitly reconciled as empty': 0,
        'approximate byte size of timestamps in pages written': 0,
        'approximate byte size of transaction IDs in pages written': 0,
        'dictionary matches': 0,
        'fast-path pages deleted': 0,
        'internal page key bytes discarded using suffix compression': 0,
        'internal page multi-block writes': 0,
        'leaf page key bytes discarded using prefix compression': 0,
        'leaf page multi-block writes': 0,
        'leaf-page overflow keys': 0,
        'maximum blocks required for a page': 0,
        'overflow values written': 0,
        'page reconciliation calls': 0,
        'page reconciliation calls for eviction': 0,
        'pages deleted': 0,
        'pages written including an aggregated newest start durable timestamp ': 0,
        'pages written including an aggregated newest stop durable timestamp ': 0,
        'pages written including an aggregated newest stop timestamp ': 0,
        'pages written including an aggregated newest stop transaction ID': 0,
        'pages written including an aggregated newest transaction ID ': 0,
        'pages written including an aggregated oldest start timestamp ': 0,
        'pages written including an aggregated prepare': 0,
        'pages written including at least one prepare': 0,
        'pages written including at least one start durable timestamp': 0,
        'pages written including at least one start timestamp': 0,
        'pages written including at least one start transaction ID': 0,
        'pages written including at least one stop durable timestamp': 0,
        'pages written including at least one stop timestamp': 0,
        'pages written including at least one stop transaction ID': 0,
        'records written including a prepare': 0,
        'records written including a start durable timestamp': 0,
        'records written including a start timestamp': 0,
        'records written including a start transaction ID': 0,
        'records written including a stop durable timestamp': 0,
        'records written including a stop timestamp': 0,
        'records written including a stop transaction ID': 0
      },
      session: { 'object compaction': 0 },
      transaction: {
        'a reader raced with a prepared transaction commit and skipped an update or updates': 0,
        'checkpoint has acquired a snapshot for its transaction': 0,
        'number of times overflow removed value is read': 0,
        'race to read prepared update retry': 0,
        'rollback to stable history store keys that would have been swept in non-dryrun mode': 0,
        'rollback to stable history store records with stop timestamps older than newer records': 0,
        'rollback to stable inconsistent checkpoint': 0,
        'rollback to stable keys removed': 0,
        'rollback to stable keys restored': 0,
        'rollback to stable keys that would have been removed in non-dryrun mode': 0,
        'rollback to stable keys that would have been restored in non-dryrun mode': 0,
        'rollback to stable restored tombstones from history store': 0,
        'rollback to stable restored updates from history store': 0,
        'rollback to stable skipping delete rle': 0,
        'rollback to stable skipping stable rle': 0,
        'rollback to stable sweeping history store keys': 0,
        'rollback to stable tombstones from history store that would have been restored in non-dryrun mode': 0,
        'rollback to stable updates from history store that would have been restored in non-dryrun mode': 0,
        'rollback to stable updates removed from history store': 0,
        'rollback to stable updates that would have been removed from history store in non-dryrun mode': 0,
        'transaction checkpoints due to obsolete pages': 0,
        'update conflicts': 0
      }
    }
  },
  indexBuilds: [],
  totalIndexSize: 4096,
  indexSizes: { _id_: 4096 },
  totalSize: 8192,
  scaleFactor: 1,
  ok: 1
}
collegeDB> 


